server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: first-service
#          uri: http://localhost:8081/
          uri: lb://MY-FIRST-SERVICE # http 프로토콜을 이용해 8081로 가는 것이 아니라, 유레카 서버로 가서 클라이언트 요청 정보를 전달해준다. + 유레카 서버에 올라가는 Application 이름 작성
          predicates:
            - Path=/first-service/** # first-service를 호출하면 8001번으로 간다. (http://localhost:8081/first-service/**로 이동)
          filters:
#            - AddRequestHeader=first-request, first-request-value-yml # key, value
#            - AddResponseHeader=first-response, first-response-value-yml
            - CustomFilter
        - id: second-service
#          uri: http://localhost:8082/
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-value-yml
#            - AddResponseHeader=second-response, second-response-value-yml
            - name: CustomFilter # params를 넣을 때는 name으로 분리를 해주어야한다.
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true